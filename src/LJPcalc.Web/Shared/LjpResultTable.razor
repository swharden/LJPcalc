@using LJPcalc.Core

@if (LatestResult is not null && BestResult is not null)
{
    string ljpPrettyMillivolts = (BestResult.LjpMillivolts > 0 ? "+" : "") + $"{BestResult.LjpMillivolts:N3}";

    bool isSolved = BestResult.Error <= 1;

    @if (isSolved)
    {
        <div class="alert alert-success d-inline-block text-success" role="alert">
            <h2 class="alert-heading">LJP = @ljpPrettyMillivolts mV</h2>
            <div>Liquid junction potential was calculated successfully.</div>
        </div>
    }
    else
    {
        <div class="alert alert-danger d-inline-block text-danger" role="alert">
            <div class="d-flex">
                <h2 class="alert-heading">
                    LJP ≈ @ljpPrettyMillivolts mV
                </h2>
                <div class="spinner-border text-danger mx-2" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            <div>Optimizing &Phi; to minimize solution B concentration error...</div>
        </div>
    }

    <h2 class="mt-5">Calculation Details</h2>

    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr class="text-center">
                    <th></th>
                    <th colspan="2">Target Concentrations</th>
                    <th colspan="3">Latest Solution</th>
                    <th colspan="3">Best Solution</th>
                </tr>
                <tr class="text-center">
                    <th class="text-start">Ion</th>
                    <th>@NameA</th>
                    <th>@NameB</th>
                    <th>&Phi;</th>
                    <th>@NameB</th>
                    <th>Error</th>
                    <th>&Phi;</th>
                    <th>@NameB</th>
                    <th>Error</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < BestResult.Ions.Length; i++)
                {
                    double testError = LatestResult.SolvedIons[i].InitialCL == 0 ? 0 : Math.Round(LatestResult.SolvedIons[i].PercentChangeCL, 3);
                    double bestError = BestResult.SolvedIons[i].InitialCL == 0 ? 0 : Math.Round(BestResult.SolvedIons[i].PercentChangeCL, 3);

                    <tr class="text-center">
                        <td class="text-start">@BestResult.SolvedIons[i].NameWithCharge</td>
                        <td>@Math.Round(BestResult.SolvedIons[i].C0, 4)</td>
                        <td>@Math.Round(BestResult.SolvedIons[i].InitialCL, 4)</td>

                        <td>@Math.Round(LatestResult.SolvedIons[i].Phi, 4)</td>
                        <td>@Math.Round(LatestResult.SolvedIons[i].CL, 4)</td>
                        @if (testError < 1)
                        {
                            <td class="table-success">&lt;1%</td>
                        }
                        else
                        {
                            <td class="table-danger">@testError%</td>
                        }

                        <td>@Math.Round(BestResult.SolvedIons[i].Phi, 4)</td>
                        <td>@Math.Round(BestResult.SolvedIons[i].CL, 4)</td>
                        @if (bestError < 1)
                        {
                            <td class="table-success">&lt;1%</td>
                        }
                        else
                        {
                            <td class="table-danger">@bestError%</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    [Parameter]
    [EditorRequired]
    public LjpResult? LatestResult { get; set; } = null;

    [Parameter]
    [EditorRequired]
    public LjpResult? BestResult { get; set; } = null;

    [Parameter]
    [EditorRequired]
    public string NameA { get; set; } = "?A?";

    [Parameter]
    [EditorRequired]
    public string NameB { get; set; } = "?B?";
}
