@inject Services.LjpService LjpService

<section class="mt-5">
    <table class="table table-borderless table-hover">
        <thead>
            <tr>
                <td>
                    <strong>Ion</strong>
                </td>
                <td>
                    <strong>Charge</strong>
                </td>
                <td>
                    <strong>Mobility</strong>
                    <span class="small text-muted">10<sup>11</sup>&times;m<sup>2</sup>/V/s</span>
                </td>
                <td>
                    <strong>@(LjpService.UseGenericLabels ? "Solution A" : "Pipette")</strong>
                    <span class="small text-muted">mM</span>
                </td>
                <td>
                    <strong>@(LjpService.UseGenericLabels ? "Solution B" : "Bath")</strong>
                    <span class="small text-muted">mM</span>
                </td>
            </tr>
        </thead>
        <tbody>
            @foreach (LJPmath.Ion ion in LjpService.IonList)
            {
                <tr>
                    <td><input class="form-control" value=@ion.name /></td>
                    <td><input class="form-control" value=@PrettyCharge(@ion.charge) readonly /></td>
                    <td><input class="form-control" value=@PrettyMobility(@ion.mu) readonly /></td>
                    <td><input class="form-control" value=@ion.c0 /></td>
                    <td><input class="form-control" value=@ion.cL /></td>
                    <td><button class="btn" @onclick="@(e => Remove(ion))">❌</button></td>
                </tr>
            }
            <tr class="highlight">
                <td><InputAddIonName /></td>
                <td><InputAddCharge /></td>
                <td><InputAddMobility /></td>
                <td><InputAddButton /></td>
                <td></td>
                <td></td>
            </tr>
        </tbody>
    </table>
</section>

@code {

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LjpService.OnIonTableChange += StateHasChanged;
    }

    private void Remove(LJPmath.Ion ion)
    {
        LjpService.IonList.Remove(ion);
        LjpService.OnIonTableChange.Invoke();
    }

    private string PrettyCharge(int charge) => (charge >= 0 ? "+" : "") + charge.ToString();
    private string PrettyMobility(double mu) => (mu / 1e11).ToString("#.#####");
}